{
    "name": "magiccap",
    "version": "2.1.2",
    "description": "A cross platform image capturing suite.",
    "main": "./dist/initialiser.js",
    "author": "MagicCap Development Team",
    "license": "MPL-2.0",
    "repository": {
        "type": "git",
        "url": "git://github.com/JakeMakesStuff/MagicCap.git"
    },
    "dependencies": {
        "@icetee/ftp": "github:icetee/node-ftp#feature/rewrite",
        "@sentry/electron": "0.17.3",
        "aperture": "^5.2.0",
        "asciiart-logo": "0.2.6",
        "async-lock": "^1.2.0",
        "better-sqlite3": "7.1.0",
        "chainfetch": "^1.2.2",
        "cors": "^2.8.5",
        "electron-progressbar": "github:whiteadi/electron-progressbar",
        "emojilib": "^2.4.0",
        "express": "^4.16.4",
        "googleapis": "github:MagicCap/google-api-nodejs-client-magiccap",
        "install": "^0.12.2",
        "jimp": "^0.6.4",
        "markdown-it": "^8.4.2",
        "mime-types": "^2.1.24",
        "moment": "^2.22.2",
        "node-fetch": "2.6.0",
        "node-machine-id": "1.1.10",
        "pofile": "1.0.11",
        "promise-ftp": "^1.3.5",
        "request": "^2.88.0",
        "request-progress": "^3.0.0",
        "safe-eval": "0.4.1",
        "screenshot-desktop": "^1.10.0",
        "sharp": "0.25.4",
        "ssh2-sftp-client": "^2.5.0",
        "streamifier": "^0.1.1",
        "sudo-prompt": "^8.2.3",
        "temp-dir": "^2.0.0",
        "tiny-s3-uploader": "1.0.0",
        "uuid": "3.3.2",
        "vue": "2.6.10"
    },
    "devDependencies": {
        "cross-env": "7.0.2",
        "rimraf": "3.0.2",
        "@types/async-lock": "^1.1.1",
        "@types/express": "^4.17.0",
        "@types/markdown-it": "0.0.8",
        "@types/mime-types": "^2.1.0",
        "@types/node": "12.12.21",
        "@types/node-fetch": "^2.3.7",
        "@types/promise-ftp": "^1.3.2",
        "@types/request": "^2.48.1",
        "@types/sharp": "0.25.1",
        "@types/better-sqlite3": "5.4.0",
        "@types/ssh2-sftp-client": "^2.5.1",
        "@types/uuid": "^3.4.4",
        "@types/ws": "^6.0.1",
        "@typescript-eslint/eslint-plugin": "1.9.0",
        "@typescript-eslint/parser": "1.9.0",
        "@vue/component-compiler-utils": "^3.0.0",
        "color": "^3.1.2",
        "electron": "9.1.2",
        "electron-builder": "22.8.0",
        "electron-installer-dmg": "3.0.0",
        "electron-osx-sign": "0.4.11",
        "electron-packager": "14.0.0",
        "eslint": "5.3.0",
        "lodash": "^4.17.15",
        "mkdirp": "0.5.1",
        "parcel-bundler": "^1.12.4",
        "terser": "4.8.1",
        "typescript": "3.9.7",
        "vue-template-compiler": "^2.6.10",
        "walk": "2.3.14"
    },
    "scripts": {
        "copy": "node ./static_copy.js",
        "postinstall": "electron-builder install-app-deps --arch x64",
        "lint": "eslint \"./src/**/*.ts\"",
        "lint-and-fix": "eslint \"./src/**/*.ts\" --fix",
        "macpackage": "electron-packager . MagicCap --ignore='(^\\/branding)|(^\\/src)|(\\/static_copy\\.js)' --no-deref-symlinks --platform darwin --arch x64 --out ./build --overwrite --icon ./dist/icons/app.icns",
        "macappsign": "electron-osx-sign --gatekeeper-assess=false --identity=\"Developer ID Application: Jake Gealer (S7UG4ZL2KJ)\" ./build/MagicCap-darwin-x64/MagicCap.app",
        "macdmg": "electron-installer-dmg ./build/MagicCap-darwin-x64/MagicCap.app MagicCap --out=./build --icon=./dist/icons/app.icns",
        "macdmgsign": "codesign --force --sign \"Developer ID Application: Jake Gealer (S7UG4ZL2KJ)\" ./build/MagicCap.dmg",
        "maccompilesigned": "npm run build && npm run macpackage && npm run macappsign && npm run macdmg && npm run macdmgsign",
        "maccompile": "npm run build && npm run macpackage && npm run macdmg",
        "linuxcompile": "npm run build && electron-packager . MagicCap --ignore='(^\\/branding)|(^\\/src)|(\\/static_copy\\.js)' --platform linux --arch x64 --out ./build --overwrite --icon ./dist/icons/app.ico",
        "dev-update-electron": "sudo npm uninstall -g electron --unsafe-perm=true && sudo npm i -g electron --unsafe-perm=true",
        "dev-run": "npm run build && electron .",
        "parcel": "cd ./src/gui && cross-env NODE_ENV=production parcel build ./index.html --target electron --public-url=./ --out-dir=../../dist/gui --detailed-report",
        "build": "rimraf dist/ && tsc --declaration true --declarationMap true && npm run parcel && npm run copy && npm run minify-region-selector-dist",
        "dev-run-capturedev": "npm run build && electron . -captureDev",
        "minify-region-selector-dist": "terser ./dist/selector/selector.js --compress --mangle -o ./dist/selector/selector.min.js",
        "dev-colors": "electron ./src/gui/css/colors.js -dark && electron ./src/gui/css/colors.js -light"
    }
}
